{"mappings":"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","sources":["public/scripts/kanban.js"],"sourcesContent":["//DESCRIPTION: Implementation (no API) for the Kanban board\r\n//This includes adding tasks and boards into the DOM, as well as \r\n//Calculating category labels programmatically (new task categories are\r\n//added to the DOM with new label colors, whereas existing categories\r\n//have matching label colors)\r\n\r\n\r\n\r\n//Fetch kanban container to insert new boards into\r\nconst kanbanContainer = document.querySelector(\".kanban\");\r\n\r\n//Fetch the first board dropzone for inserting new tasks into (default behavior)\r\nconst taskDropContainer = document.getElementById(\"kanban__column-items\");\r\n\r\n//Fetch all parent elements to insert tasks into\r\n//This is defined as the valid dropzone inside each kanban board\r\n//(Exclude the \"Today's Focus\" board, since it has custom implementation)\r\nlet totalTasks = document.querySelectorAll(\".kanban__column-items:not([id*='today-focus--items'])\");\r\n\r\n//Create an empty array to store saved category names and label colors\r\nvar categoryList = [];\r\n\r\n//List of available label colors, same hex as Sass variables\r\nvar colorList = [\"#6554C0\", \"#0065FF\", \"#FF5630\", \"#00B8D9\", \"#36B37E\", \"#FFAB00\"]\r\n\r\n//Pointer to indicate which label color should be used next\r\n//(This ensures that conflicting label colors are minimised)\r\nlet colorPos = 0;\r\n\r\n//Generate (mostly) unique ID for each task\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\n//Handles adding new boards to the DOM (fired on \"Add Board\" button click)\r\nfunction addNewBoard() {\r\n  let kanbanColumn = document.createElement(\"div\");\r\n  kanbanColumn.classList.add(\"kanban__column\");\r\n\r\n  let kanbanColumnTitle = document.createElement(\"div\");\r\n  kanbanColumnTitle.classList.add(\"kanban__column-title\");\r\n  kanbanColumnTitle.contentEditable = true;\r\n  kanbanColumnTitle.innerHTML = \"UNTITLED\";\r\n\r\n  let kanbanColumnTitleTaskcount = document.createElement(\"div\");\r\n  kanbanColumnTitleTaskcount.classList.add(\"kanban__column-title--taskcount\");\r\n  kanbanColumnTitleTaskcount.innerHTML = 0;\r\n\r\n  let kanbanButton = document.createElement(\"button\");\r\n  kanbanButton.classList.add(\"kanban__button\");\r\n  kanbanButton.setAttribute(\"onclick\", \"openModal()\");\r\n  kanbanButton.innerHTML = \"+\";\r\n\r\n  let kanbanColumnItems = document.createElement(\"div\");\r\n  kanbanColumnItems.id = \"kanban__column-items\";\r\n  kanbanColumnItems.classList.add(\"kanban__column-items\");\r\n  kanbanColumnItems.setAttribute(\"ondrop\", \"drop(event, this)\");\r\n  kanbanColumnItems.setAttribute(\"ondragenter\", \"dragEnter(event, this)\");\r\n  kanbanColumnItems.setAttribute(\"ondragover\", \"dragOver(event, this)\");\r\n  kanbanColumnItems.setAttribute(\"ondragleave\", \"dragLeave(event, this)\");\r\n\r\n\r\n  kanbanColumn.appendChild(kanbanColumnTitle);\r\n  kanbanColumn.appendChild(kanbanColumnTitleTaskcount);\r\n  kanbanColumn.appendChild(kanbanButton);\r\n  kanbanColumn.appendChild(kanbanColumnItems);\r\n\r\n  //Insert into DOM before the action buttons, but after last board\r\n  kanbanContainer.insertBefore(kanbanColumn, kanbanContainer.lastElementChild);\r\n}\r\n\r\n//Handles deleting boards (fired on \"Delete Board/Task\" button click)\r\nfunction deleteLastBoard() {\r\n  var allBoards = document.querySelectorAll(\".kanban__column\");\r\n\r\n  //Only validate delete event if there are more than 2 boards \r\n  if (allBoards.length > 3) {\r\n    allBoards[allBoards.length - 1].remove();\r\n  }\r\n}\r\n\r\n//Define and pre-render new task object\r\nfunction addTask(taskTitle, taskDescription, priorityRating, taskCategory, dueDate, estimatedTime) {\r\n  //Define our task object\r\n  let task = {\r\n    //Unique ID for future referencing\r\n    idNumber: getRandomInt(99999),\r\n    taskTitle,\r\n    taskDescription,\r\n    priorityRating,\r\n    taskCategory: taskCategory.toUpperCase(),\r\n    dueDate,\r\n    estimatedTime,\r\n  };\r\n\r\n  //Check to see if the category exists yet,\r\n  //By flattening the array to quickly cross-reference\r\n  let categoryObj;\r\n  let catMap = categoryList.map(cat => cat.name);\r\n  //If the category doesn't exist yet...\r\n  if(!catMap.includes(task.taskCategory)) {\r\n    //Define our category object\r\n    //Stores the category name and randomised label color\r\n    categoryObj = {\r\n      name: task.taskCategory,\r\n      labelColor: colorList[colorPos],\r\n    };\r\n\r\n    //Increment the pointer position to cycle to the next label color\r\n    if (colorPos == colorList.length - 1) { colorPos = 0}\r\n    else { colorPos += 1; }\r\n\r\n    //Add the new category name and color to our array\r\n    categoryList.push(categoryObj);\r\n\r\n    //Add the new label to the dropdown in the \"Add Task\" modal\r\n    let catSelect = document.createElement(\"option\");\r\n    catSelect.value = categoryObj.name;\r\n    categories.appendChild(catSelect);\r\n  }\r\n\r\n  //If the category name already exists, fetch it from the category list\r\n  //This allows us to reference the existing label color\r\n  else {\r\n    categoryObj = categoryList[catMap.indexOf(task.taskCategory)];\r\n  }\r\n\r\n  // Separate the DOM manipulation from the object creation logic\r\n  renderTask(task, categoryObj);\r\n}\r\n\r\n// Function to display the item on the page\r\nfunction renderTask(task, cat) {\r\n  //Create an HTML element as a container for our task\r\n  let kanbanTaskContainer = document.createElement(\"div\");\r\n  kanbanTaskContainer.classList.add('kanban__column-task');\r\n  kanbanTaskContainer.setAttribute(\"draggable\", true);\r\n  kanbanTaskContainer.id = task.idNumber;\r\n  kanbanTaskContainer.addEventListener('dragstart', dragStart);\r\n\r\n  //Define color-coded priority icons using classes and unicode chars\r\n  const lowPriority = \"<div><p class='low-priority'>\" + \"&#9670\" + \"</p></div>\";\r\n  const medPriority = \"<div><p class='med-priority'>\" + \"&#9670 &#9670\" + \"</p></div>\";\r\n  const highPriority = \"<div><p class='high-priority'>\" + \"&#9670 &#9670 &#9670\" + \"</p></div>\";\r\n\r\n  //Check the priority rating of the form input value, and assign it to an icon\r\n  let taskPriority = highPriority;\r\n  if (task.priorityRating == \"low\") { taskPriority = lowPriority; }\r\n  else if (task.priorityRating == \"medium\") { taskPriority = medPriority; }\r\n\r\n  //Add innerHTML for the task category, but hide the element if there is a blank input\r\n  //Use the category object to set a randomised label color for new categories, and use the same color for existing ones\r\n  let categoryDiv = \"<div ><span class='task-category' style='float:right; background-color:\" + cat.labelColor + \"'>\" + cat.name + \"</span>\";\r\n  //If the task div label color is light, change the text color to black for accessibility\r\n  if(cat.labelColor == \"#00B8D9\" || cat.labelColor == \"#36B37E\" || cat.labelColor ==  \"#FFAB00\") { categoryDiv = \"<div ><span class='task-category' style='float:right; color: black; background-color:\" + cat.labelColor + \"'>\" + cat.name + \"</span>\"; }\r\n  if((cat.name == \"\") || (!cat.name)) { categoryDiv = \"<div ><span class='task-category' style='float:right; display:none'>\" + task.taskCategory + \"</span>\"; }\r\n\r\n  let title = \"<h4>\" + task.taskTitle + \"</h4></div>\";\r\n  let desc = \"<div><p>\" + task.taskDescription + \"</p></div>\";\r\n\r\n  //Add innerHTML for the task time, but hide the element if there is a blank input\r\n  let time = \"<div><h4 style='float:right;'>\" + task.estimatedTime + \" hrs</h4>\";\r\n  if(!task.estimatedTime) { time = \"<div><h4 style='float:right; display:none;'>\" + task.estimatedTime + \" hrs</h4>\"; }\r\n\r\n  let priority = taskPriority + \"</div>\";\r\n\r\n  //Append task metadata into the DOM\r\n  kanbanTaskContainer.innerHTML = categoryDiv + title + desc + time + priority;\r\n\r\n  //Append task to array\r\n  taskDropContainer.appendChild(kanbanTaskContainer);\r\n\r\n  //Update the task counts for each board, since a new task has been appended to the DOM\r\n  totalTasks = document.querySelectorAll(\".kanban__column-items:not([id*='today-focus--items'])\");\r\n  totalTasks.forEach(board => board.parentNode.children[1].innerHTML = board.childNodes.length);\r\n}\r\n\r\n\r\n\r\n//Some test tasks to make sure nothing breaks\r\naddTask(\"2 Persona Slides\", \"Add user needs, requirements, and frustrations for two to three different user groups\", \"high\", \"DECO2017 CLASS\", \"26/03/2021\", 3);\r\naddTask(\"JavaScript Quiz\", \"Refresh concepts such as data structures, buffers and arrays\", \"medium\", \"INFO1001\", \"26/03/2021\");\r\naddTask(\"Finalise Mockups\", \"Clean up layers, kern font families, prepare for presentation and finish off slide deck\", \"low\", \"\", \"\", \"\");\r\naddTask(\"Virtual Reality Config\", \"Configure ARToolKit to prepare for mixed reality applications\", \"low\", \"INFO1001\", \"\", 10);\r\naddTask(\"FAANG Interview Prep\", \"Do 3-5 practice problems daily for the next week, specifically datasets and binary trees\", \"medium\", \"Interviews\", \"\", 20);"],"names":[],"version":3,"file":"index.aa2a3b63.js.map","sourceRoot":"/__parcel_source_root/"}