{"mappings":"AAAA,4FAA4F;AAC5F,SAAS,SAAS,CAAC,CAAC,EAAE;IAClB,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAClD,UAAU,CAAC,IAAM;QACb,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KAClC,EAAE,CAAC,CAAC,CAAC;CACT;AAGD,oDAAoD;AACpD,IAAI,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,AAAC;AACjE,OAAO,CAAC,OAAO,CAAC,CAAA,GAAG,GAAI;IACnB,GAAG,CAAC,gBAAgB,CAAC,WAAW,EAAE,SAAS,CAAC;IAC5C,GAAG,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC3C,GAAG,CAAC,gBAAgB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;CAChD,CAAC,CAAC;AAEH,wDAAwD;AACxD,SAAS,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE;IACtB,CAAC,CAAC,cAAc,EAAE,CAAC;IACnB,IAAI,EAAE,EACF,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CAEnD;AAED,wDAAwD;AACxD,SAAS,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE;IACrB,CAAC,CAAC,cAAc,EAAE,CAAC;IACnB,IAAI,EAAE,EACF,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CAEnD;AAED,uEAAuE;AACvE,SAAS,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE;IACtB,IAAI,EAAE,EACF,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;CAEtD;AAED,wDAAwD;AACxD,8CAA8C;AAC9C,8CAA8C;AAE9C,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE;IACjB,IAAI,EAAE,EACF,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAGnD,4BAA4B;IAC5B,MAAM,EAAE,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,AAAC;IAChD,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,AAAC;IAE9C,4BAA4B;IAC5B,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAE1B,gCAAgC;IAChC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;CACtC","sources":["public/scripts/dragdrop.js"],"sourcesContent":["// dragStart event defines initial behavior on drag; hide original element and transfer data\r\nfunction dragStart(e) {\r\n    e.dataTransfer.setData('text/plain', e.target.id);\r\n    setTimeout(() => {\r\n        e.target.classList.add('hide');\r\n    }, 0);\r\n}\r\n\r\n\r\n// Define drop targets as all Kanban columns of type\r\nlet columns = document.querySelectorAll('.kanban__column-items');\r\ncolumns.forEach(col => {\r\n    col.addEventListener('dragenter', dragEnter)\r\n    col.addEventListener('dragover', dragOver);\r\n    col.addEventListener('dragleave', dragLeave);\r\n});\r\n\r\n//Add highlight class to board when task is dragged over\r\nfunction dragEnter(e, el) {\r\n    e.preventDefault();\r\n    if (el) {\r\n        el.parentElement.classList.add('drag-over');\r\n    }\r\n}\r\n\r\n//Add highlight class to board when task is dragged over\r\nfunction dragOver(e, el) {\r\n    e.preventDefault();\r\n    if (el) {\r\n        el.parentElement.classList.add('drag-over');\r\n    }\r\n}\r\n\r\n//Remove highlight class from board when task is not being dragged over\r\nfunction dragLeave(e, el) {\r\n    if (el) {\r\n        el.parentElement.classList.remove('drag-over');\r\n    }\r\n}\r\n\r\n//When task is placed, remove highlight class from board\r\n//And fetch the previously stored element data\r\n//Then append child to new board parent in DOM\r\n\r\nfunction drop(e, el) {\r\n    if (el) {\r\n        el.parentElement.classList.remove('drag-over');\r\n    }\r\n\r\n    // get the draggable element\r\n    const id = e.dataTransfer.getData('text/plain');\r\n    const draggable = document.getElementById(id);\r\n\r\n    // add it to the drop target\r\n    el.appendChild(draggable);\r\n\r\n    // display the draggable element\r\n    draggable.classList.remove('hide');\r\n}"],"names":[],"version":3,"file":"index.db8f8f7d.js.map","sourceRoot":"/__parcel_source_root/"}