{"mappings":"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","sources":["public/scripts/dragdrop.js"],"sourcesContent":["//DESCRIPTION: Implements all the drag and drop functionality for tasks on the Kanban Board\r\n//Users can drag tasks between boards and the focus dropbox, and can also drop tasks over the\r\n//delete button to remove them. Valid drop targets have a special highlight class that indicates\r\n//whether or not a valid drop() event will fire.\r\n\r\n// dragStart event defines initial behavior on drag; hide original element and transfer data\r\nfunction dragStart(e) {\r\n    e.dataTransfer.setData('text/plain', e.target.id);\r\n    setTimeout(() => { e.target.classList.add('hide'); }, 0);\r\n}\r\n\r\n//Add highlight class to board when task is dragged over\r\nfunction dragEnter(e, el) {\r\n    e.preventDefault();\r\n    if (el) {\r\n        if(el.classList.contains(\"board-action\")) { el.classList.add('drag-over'); }\r\n        else { el.parentElement.classList.add('drag-over'); }\r\n    }\r\n}\r\n\r\n//Add highlight class to board when task is dragged over\r\nfunction dragOver(e, el) {\r\n    e.preventDefault();\r\n    if (el) {\r\n        if(el.classList.contains(\"board-action\")) { el.classList.add('drag-over'); }\r\n        else { el.parentElement.classList.add('drag-over'); }\r\n    }\r\n}\r\n\r\n//Remove highlight class from board when task is not being dragged over\r\nfunction dragLeave(e, el) {\r\n    if (el) {\r\n        //Handle the class hierarchy differently if the target is the delete button and not a board\r\n        if(el.classList.contains(\"board-action\")) { el.classList.remove('drag-over'); }\r\n        else { el.parentElement.classList.remove('drag-over'); }\r\n    }\r\n}\r\n\r\n//Invalid drag over event, this is essentially a useless function\r\n//But it's necessary to trigger and handle the invalidDrop() event\r\nfunction invalidDragOver(e) {\r\n    e.preventDefault();\r\n}\r\n\r\n//Handling drop events on invalid targets\r\n//Without this function, tasks that are dropped on invalid targets never\r\n//re-appear in the DOM because the drop() event never fires\r\nfunction invalidDrop(e) {\r\n    const id = e.dataTransfer.getData('text/plain');\r\n    const draggable = document.getElementById(id);\r\n    draggable.classList.remove('hide');\r\n}\r\n\r\n//When the task is successfuly placed, remove the highlight class from the drop target\r\n//Then fetch the previously stored element data and append child to new board parent in DOM\r\nfunction drop(e, el) {\r\n\r\n    //Check to make sure the drop target is valid\r\n    if (el) { el.parentElement.classList.remove('drag-over'); }\r\n\r\n    //If there are more than 3 items in the \"Today's Focus\" dropbox, invalidate the drop\r\n    if ((el.id == \"today-focus--items\") && (el.children.length >= 4)) {\r\n        invalidDrop(e);\r\n    }\r\n\r\n    else {\r\n        // Fetch the draggable element\r\n        const id = e.dataTransfer.getData('text/plain');\r\n        const draggable = document.getElementById(id);\r\n\r\n        // Append the draggable element to the drop target\r\n        //Insert before the placeholder if it's dropped on \"Today's Focus\" dropbox\r\n        if (el.id == \"today-focus--items\") {  el.insertBefore(draggable, el.firstChild); }\r\n        else { el.appendChild(draggable); }\r\n\r\n        // Display the draggable element\r\n        draggable.classList.remove('hide');\r\n\r\n        //Update the total board task counts in the DOM once the task has been appended to new parent\r\n        //(Query selector excludes \"Today's Focus\" board with specific ID but same class name)\r\n        totalTasks = document.querySelectorAll(\".kanban__column-items:not([id*='today-focus--items'])\");\r\n        totalTasks.forEach(board => board.parentNode.children[1].innerHTML = board.childNodes.length);\r\n\r\n        //Remove the dragbox placeholder from \"Today's Focus\" board if max items (3) have been placed\r\n        if ((el.id == \"today-focus--items\") && (el.children.length == 4)) {\r\n            document.querySelector(\".task-placeholder\").style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n\r\n//Delete task when dropped over the \"Delete\" button\r\nfunction deleteTask(e, el) {\r\n    el.classList.remove('drag-over');\r\n    const id = e.dataTransfer.getData('text/plain');\r\n    const draggable = document.getElementById(id);\r\n\r\n    //Remove task from DOM\r\n    draggable.remove();\r\n\r\n    //Update the total board task counts in the DOM once the task has been deleted\r\n    totalTasks = document.querySelectorAll(\".kanban__column-items:not([id*='today-focus--items'])\");\r\n    totalTasks.forEach(board => board.parentNode.children[1].innerHTML = board.childNodes.length);\r\n}"],"names":[],"version":3,"file":"index.db8f8f7d.js.map","sourceRoot":"/__parcel_source_root/"}