{"mappings":"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","sources":["public/scripts/dragdrop.js"],"sourcesContent":["// dragStart event defines initial behavior on drag; hide original element and transfer data\r\nfunction dragStart(e) {\r\n    e.dataTransfer.setData('text/plain', e.target.id);\r\n    setTimeout(() => {\r\n        e.target.classList.add('hide');\r\n    }, 0);\r\n}\r\n\r\n//Add highlight class to board when task is dragged over\r\nfunction dragEnter(e, el) {\r\n    e.preventDefault();\r\n    if (el) {\r\n        if(el.classList.contains(\"board-action\")) {\r\n            el.classList.add('drag-over');\r\n        }\r\n\r\n        else {\r\n            el.parentElement.classList.add('drag-over');\r\n        }\r\n    }\r\n}\r\n\r\n//Add highlight class to board when task is dragged over\r\nfunction dragOver(e, el) {\r\n    e.preventDefault();\r\n    if (el) {\r\n        if(el.classList.contains(\"board-action\")) {\r\n            el.classList.add('drag-over');\r\n        }\r\n\r\n        else {\r\n            el.parentElement.classList.add('drag-over');\r\n        }\r\n    }\r\n}\r\n\r\n//Remove highlight class from board when task is not being dragged over\r\nfunction dragLeave(e, el) {\r\n    if (el) {\r\n        if(el.classList.contains(\"board-action\")) {\r\n            el.classList.remove('drag-over');\r\n        }\r\n\r\n        else {\r\n            el.parentElement.classList.remove('drag-over');\r\n        }\r\n    }\r\n}\r\n\r\n//When task is placed, remove highlight class from board\r\n//And fetch the previously stored element data\r\n//Then append child to new board parent in DOM\r\n\r\nfunction invalidDragOver(e) {\r\n    e.preventDefault();\r\n}\r\n\r\n//Handling drop events on invalid targets\r\nfunction invalidDrop(e) {\r\n    const id = e.dataTransfer.getData('text/plain');\r\n    const draggable = document.getElementById(id);\r\n    draggable.classList.remove('hide');\r\n}\r\n\r\nfunction drop(e, el) {\r\n\r\n    //Check to make sure the drop target is valid\r\n    if (el) {\r\n        el.parentElement.classList.remove('drag-over');\r\n    }\r\n\r\n    //If there are more than 3 items in the \"Today's Focus\" dropbox, invalidate the drop\r\n    if ((el.id == \"today-focus--items\") && (el.children.length >= 4)) {\r\n        invalidDrop(e);\r\n    }\r\n\r\n    else {\r\n        // Fetch the draggable element\r\n        const id = e.dataTransfer.getData('text/plain');\r\n        const draggable = document.getElementById(id);\r\n\r\n        // Append the draggable element to the drop target\r\n        //Insert before the placeholder if it's dropped on \"Today's Focus\" dropbox\r\n        if (el.id == \"today-focus--items\") { \r\n            el.insertBefore(draggable, el.firstChild); \r\n        }\r\n        else { \r\n            el.appendChild(draggable); \r\n        }\r\n\r\n        // Display the draggable element\r\n        draggable.classList.remove('hide');\r\n\r\n        totalTasks = document.querySelectorAll(\".kanban__column-items:not([id*='today-focus--items'])\");\r\n        totalTasks.forEach(board => board.parentNode.children[1].innerHTML = board.childNodes.length);\r\n\r\n        if ((el.id == \"today-focus--items\") && (el.children.length == 4)) {\r\n            document.querySelector(\".task-placeholder\").style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteTask(e, el) {\r\n    el.classList.remove('drag-over');\r\n    const id = e.dataTransfer.getData('text/plain');\r\n    const draggable = document.getElementById(id);\r\n\r\n    draggable.remove();\r\n\r\n    totalTasks = document.querySelectorAll(\".kanban__column-items:not([id*='today-focus--items'])\");\r\n    totalTasks.forEach(board => board.parentNode.children[1].innerHTML = board.childNodes.length);\r\n}"],"names":[],"version":3,"file":"index.db8f8f7d.js.map","sourceRoot":"/__parcel_source_root/"}